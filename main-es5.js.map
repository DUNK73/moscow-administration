{"version":3,"sources":["$_lazy_route_resource lazy namespace object","src/app/analitics/components/analitics-bottom-tile-for-subindusry/analitics-bottom-tile-for-subindusry.component.ts","src/app/analitics/components/analitics-bottom-tile-for-subindusry/analitics-bottom-tile-for-subindusry.component.html","src/app/analitics/components/analitics-bottom-tile/analitics-bottom-tile.component.ts","src/app/analitics/components/analitics-bottom-tile/analitics-bottom-tile.component.html","src/app/analitics/components/analitics-right-tile-for-subindusry/analitics-right-tile-for-subindusry.component.ts","src/app/analitics/components/analitics-right-tile-for-subindusry/analitics-right-tile-for-subindusry.component.html","src/app/analitics/components/analitics-right-tile/analitics-right-tile.component.ts","src/app/analitics/components/analitics-right-tile/analitics-right-tile.component.html","src/app/analitics/components/analitics-top-tile/analitics-top-tile.component.ts","src/app/analitics/components/analitics-top-tile/analitics-top-tile.component.html","src/app/analitics/models/activity-type.enum.ts","src/app/app-routing.module.ts","src/app/app.component.ts","src/app/app.component.html","src/app/app.module.ts","src/app/clients/components/client-info-results-tile/client-info-results-tile.component.ts","src/app/clients/components/client-info-results-tile/client-info-results-tile.component.html","src/app/clients/components/client-info-tile/client-info-tile.component.ts","src/app/clients/components/client-info-tile/client-info-tile.component.html","src/app/clients/components/clients/clients.component.ts","src/app/clients/components/clients/clients.component.html","src/app/first-page/bar-chart/bar-chart.component.ts","src/app/first-page/bar-chart/bar-chart.component.html","src/app/first-page/chart/chart.component.ts","src/app/first-page/chart/chart.component.html","src/app/first-page/first-page.component.ts","src/app/first-page/first-page.component.html","src/app/first-page/map-chart/map-chart.component.ts","src/app/first-page/map-chart/map-chart.component.html","src/app/first-page/pie-chart/pie-chart.component.ts","src/app/first-page/pie-chart/pie-chart.component.html","src/app/first-page/radar-chart/radar-chart.component.ts","src/app/first-page/radar-chart/radar-chart.component.html","src/app/general-information/components/bottom-tile/bottom-tile.component.ts","src/app/general-information/components/bottom-tile/bottom-tile.component.html","src/app/general-information/components/right-tile/right-tile.component.ts","src/app/general-information/components/right-tile/right-tile.component.html","src/app/general-information/components/top-tile/top-tile.component.ts","src/app/general-information/components/top-tile/top-tile.component.html","src/app/shared/ChildComponent/ChildComponent.component.ts","src/app/shared/ChildComponent/ChildComponent.component.html","src/app/shared/ChildPrimaryComponent/ChildPrimaryComponent.component.ts","src/app/shared/ChildPrimaryComponent/ChildPrimaryComponent.component.html","src/app/shared/ChildSecondaryComponent/ChildSecondaryComponent.component.ts","src/app/shared/ChildSecondaryComponent/ChildSecondaryComponent.component.html","src/app/shared/RootPrimaryComponent/RootPrimaryComponent.component.ts","src/app/shared/RootPrimaryComponent/RootPrimaryComponent.component.html","src/app/shared/RootSecondaryComponent/RootSecondaryComponent.component.ts","src/app/shared/RootSecondaryComponent/RootSecondaryComponent.component.html","src/app/shared/components/kpi-value/kpi-value.component.ts","src/app/shared/components/kpi-value/kpi-value.component.html","src/app/shared/dtata-services/analitics-data.service.ts","src/app/shared/dtata-services/clients-data.service.ts","src/app/shared/outlet/outlet.component.ts","src/app/shared/outlet/outlet.component.html","src/app/shared/shared.component.ts","src/app/shared/shared.component.html","src/environments/environment.ts","src/main.ts"],"names":[],"mappings":"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","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit, OnDestroy, AfterViewInit, NgZone } from '@angular/core';\nimport * as am4charts from '@amcharts/amcharts4/charts';\nimport * as am4core from '@amcharts/amcharts4/core';\nimport am4themes_animated from '@amcharts/amcharts4/themes/animated';\nimport { AnaliticsDataService } from 'src/app/shared/dtata-services/analitics-data.service';\nimport { Industry } from 'src/app/models/industry';\nimport { tap, takeUntil } from 'rxjs/operators';\nimport { ActivityType, ActivityTypeMapper } from '../../models/activity-type.enum';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Subject } from 'rxjs';\nimport { SubIndustry } from '../../../models/industry';\n\n@Component({\n  selector: 'app-analitics-bottom-tile-for-subindusry',\n  templateUrl: './analitics-bottom-tile-for-subindusry.component.html',\n  styleUrls: ['./analitics-bottom-tile-for-subindusry.component.css']\n})\nexport class AnaliticsBottomTileForSubIndustryComponent implements OnInit, OnDestroy, AfterViewInit {\n\n  private chart: am4charts.PieChart;\n\n  public activityType: ActivityType;\n  public activityTypeLabel: string;\n  public industryId: string;\n  public industryLabel: string;\n\n  private unsubscribe$$ = new Subject();\n\n\n  constructor(\n    private analiticsDataService: AnaliticsDataService,\n    private readonly router: Router,\n    private readonly activatedRoute: ActivatedRoute,\n    private readonly zone: NgZone,\n  ) {\n\n    this.activatedRoute.params\n      .pipe(\n        tap(params => {\n          this.activityType = params['activityType'];\n          this.activityTypeLabel = ActivityTypeMapper.getLabel(this.activityType);\n          this.industryId = params['industry'];\n        }),\n        tap(params => {\n          this.ngAfterViewInit();\n        }),\n        takeUntil(this.unsubscribe$$)\n      )\n      .subscribe();\n\n  }\n\n  ngOnInit(): void {\n\n\n  }\n\n  private initChart(data: Industry) {\n\n    if (!data || !data.subIndustry) {\n      return;\n    }\n\n    const chartData = data.subIndustry.map(item => {\n      return {\n        category: item.title,\n        value: item.exportDataList[item.exportDataList.length - 1].value\n      };\n    });\n\n\n    this.zone.runOutsideAngular(() => {\n\n      /* Set themes */\n      am4core.useTheme(am4themes_animated);\n\n      /* Create chart instance */\n      this.chart = am4core.create('analiticsInfoChartDiv', am4charts.PieChart);\n\n      // Add data\n      this.chart.data = chartData;\n\n      // Add and configure Series\n      const pieSeries = this.chart.series.push(new am4charts.PieSeries());\n      pieSeries.dataFields.value = 'value';\n      pieSeries.dataFields.category = 'category';\n      pieSeries.slices.template.tooltipText = '{category}: {value}';\n\n      // Let's cut a hole in our Pie chart the size of 40% the radius\n      this.chart.innerRadius = am4core.percent(40);\n\n      // Disable ticks and labels\n      pieSeries.labels.template.disabled = true;\n      pieSeries.ticks.template.disabled = true;\n\n      // Disable tooltips\n      // pieSeries.slices.template.tooltipText = '';\n\n      // Add a legend\n      // this.chart.legend = new am4charts.Legend();\n    });\n  }\n\n  ngAfterViewInit() {\n\n    this.analiticsDataService.getAnalitics()\n      .pipe(\n        tap(data => {\n          const industry = data.find(x => x.id === +this.industryId);\n          if (industry) {\n            this.industryLabel = industry.title;\n            this.initChart(industry);\n          }\n        })\n      )\n      .subscribe();\n  }\n\n  ngOnDestroy() {\n    this.zone.runOutsideAngular(() => {\n      if (this.chart) {\n        this.chart.dispose();\n      }\n    });\n    this.unsubscribe$$.next();\n  }\n\n}\n","<div class=\"container tile--selected\">\n\n  <div class=\"container__item chart-container\">\n    <h2>{{this.industryLabel}}</h2>\n    <div id=\"analiticsInfoChartDiv\"></div>\n  </div>\n\n  <div class=\"container__item\">\n    <h2>KPI по АПК</h2>\n\n    <section class=\"indicator\">\n      <h3>Исполнение нац. проекта</h3>\n      <div class=\"indicator__value\">\n        <span>30%</span>\n        <div class=\"progress\">\n          <div class=\"progress__bar-1\"></div>\n          <div class=\"progress__bar-2\"></div>\n        </div>\n      </div>\n    </section>\n\n    <section class=\"indicator\">\n      <h3>Соблюдение коэффициента</h3>\n      <div class=\"indicator__value\">\n        TODO\n      </div>\n    </section>\n\n  </div>\n\n</div>\n","import { Component, OnInit, OnDestroy, AfterViewInit, NgZone } from '@angular/core';\nimport * as am4charts from '@amcharts/amcharts4/charts';\nimport * as am4core from '@amcharts/amcharts4/core';\nimport am4themes_animated from '@amcharts/amcharts4/themes/animated';\nimport { AnaliticsDataService } from 'src/app/shared/dtata-services/analitics-data.service';\nimport { Industry } from 'src/app/models/industry';\nimport { tap, takeUntil } from 'rxjs/operators';\nimport { ActivityType, ActivityTypeMapper } from '../../models/activity-type.enum';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Subject } from 'rxjs';\n\n@Component({\n  selector: 'app-analitics-bottom-tile',\n  templateUrl: './analitics-bottom-tile.component.html',\n  styleUrls: ['./analitics-bottom-tile.component.css']\n})\nexport class AnaliticsBottomTileComponent implements OnInit, OnDestroy, AfterViewInit {\n\n  private chart: am4charts.PieChart;\n\n  public activityType: ActivityType;\n  public activityTypeLabel: string;\n\n  private unsubscribe$$ = new Subject();\n\n  constructor(\n    private analiticsDataService: AnaliticsDataService,\n    private readonly router: Router,\n    private readonly activatedRoute: ActivatedRoute,\n    private zone: NgZone,\n  ) { }\n\n  ngOnInit(): void {\n    this.activityType = this.activatedRoute.snapshot.params['activityType'];\n    this.activityTypeLabel = ActivityTypeMapper.getLabel(this.activityType);\n    this.activatedRoute.params\n      .pipe(\n        tap(params => {\n          this.activityType = params['activityType'];\n          this.activityTypeLabel = ActivityTypeMapper.getLabel(this.activityType);\n        }),\n        takeUntil(this.unsubscribe$$)\n      )\n      .subscribe();\n  }\n\n  private initChart(data: Array<Industry>) {\n\n    let chartData = data.map(item => {\n      return {\n        category: item.title,\n        value: item.exportSum\n      };\n    });\n\n\n    this.zone.runOutsideAngular(() => {\n\n      /* Set themes */\n      am4core.useTheme(am4themes_animated);\n\n      /* Create chart instance */\n      this.chart = am4core.create('analiticsInfoChartDiv', am4charts.PieChart);\n\n      // Add data\n      this.chart.data = chartData;\n\n      // Add and configure Series\n      const pieSeries = this.chart.series.push(new am4charts.PieSeries());\n      pieSeries.dataFields.value = 'value';\n      pieSeries.dataFields.category = 'category';\n      pieSeries.slices.template.tooltipText = '{category}: {value}';\n\n      // Let's cut a hole in our Pie chart the size of 40% the radius\n      this.chart.innerRadius = am4core.percent(40);\n\n      // Disable ticks and labels\n      pieSeries.labels.template.disabled = true;\n      pieSeries.ticks.template.disabled = true;\n\n      // Disable tooltips\n      // pieSeries.slices.template.tooltipText = '';\n\n      // Add a legend\n      // this.chart.legend = new am4charts.Legend();\n    });\n  }\n\n  ngAfterViewInit() {\n\n    this.analiticsDataService.getAnalitics()\n      .pipe(\n        tap(data => {\n          this.initChart(data);\n        })\n      )\n      .subscribe();\n\n\n\n  }\n\n  ngOnDestroy() {\n    this.zone.runOutsideAngular(() => {\n      if (this.chart) {\n        this.chart.dispose();\n      }\n    });\n    this.unsubscribe$$.next();\n  }\n\n}\n","<div class=\"container tile--selected\">\n\n  <div class=\"container__item chart-container\">\n    <h2>{{this.activityTypeLabel}}</h2>\n    <div id=\"analiticsInfoChartDiv\"></div>\n  </div>\n\n  <div class=\"container__item\">\n    <h2>KPI по {{this.activityTypeLabel}}</h2>\n\n    <section class=\"indicator\">\n      <h3>Исполнение нац. проекта</h3>\n      <div class=\"indicator__value\">\n        <span>30%</span>\n        <div class=\"progress\">\n          <div class=\"progress__bar-1\"></div>\n          <div class=\"progress__bar-2\"></div>\n        </div>\n      </div>\n    </section>\n\n    <section class=\"indicator\">\n      <h3>Соблюдение коэффициента</h3>\n      <div class=\"indicator__value\">\n        TODO\n      </div>\n    </section>\n\n  </div>\n\n</div>\n","import { Component, OnInit, OnDestroy, AfterViewInit, ViewChild, ElementRef, NgZone } from '@angular/core';\nimport * as am4core from '@amcharts/amcharts4/core';\nimport * as am4maps from '@amcharts/amcharts4/maps';\nimport am4geodata_worldLow from '@amcharts/amcharts4-geodata/worldLow';\n\n@Component({\n  selector: 'app-analitics-right-tile-for-subindusry',\n  templateUrl: './analitics-right-tile-for-subindusry.component.html',\n  styleUrls: ['./analitics-right-tile-for-subindusry.component.less']\n})\nexport class AnaliticsRightTileForSubIndustryComponent implements OnInit, OnDestroy, AfterViewInit {\n\n  private chart: am4maps.MapChart;\n\n  @ViewChild('chartContainer')\n  private chartContainer: ElementRef;\n\n  constructor(\n    private zone: NgZone,\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  ngAfterViewInit() {\n    this.zone.runOutsideAngular(() => {\n\n      // Create map instance\n      this.chart = am4core.create(this.chartContainer.nativeElement, am4maps.MapChart);\n      const chart = this.chart;\n\n\n      // Set map definition\n      chart.geodata = am4geodata_worldLow;\n\n      // Set projection\n      chart.projection = new am4maps.projections.Miller();\n\n      // Create map polygon series\n      const polygonSeries = chart.series.push(new am4maps.MapPolygonSeries());\n\n      // Make map load polygon (like country names) data from GeoJSON\n      polygonSeries.useGeodata = true;\n\n      // Configure series\n      const polygonTemplate = polygonSeries.mapPolygons.template;\n      polygonTemplate.tooltipText = '{name}';\n      polygonTemplate.fill = am4core.color('gray');\n\n      // Create hover state and set alternative fill color\n      const hs = polygonTemplate.states.create('hover');\n      hs.properties.fill = am4core.color('#367B25');\n\n      // Remove Antarctica\n      polygonSeries.exclude = ['AQ'];\n\n      const color1 = am4core.color('#F05C5C');\n      const color2 = am4core.color('rgb(92, 240, 183)');\n\n      // Add some data\n      polygonSeries.data = [\n        {\n          id: 'US',\n          name: 'United States',\n          value: 100,\n          fill: color1\n        },\n        {\n          id: 'FR',\n          name: 'France',\n          value: 50,\n          fill: color1\n        },\n        {\n          id: 'CN',\n          name: 'China',\n          value: 500,\n          fill: color2\n        },\n        {\n          id: 'BH',\n          name: 'Bahrain',\n          value: 50,\n          fill: color2\n        },\n        {\n          id: 'BR',\n          name: 'Brazil',\n          value: 50,\n          fill: color2\n        },\n      ];\n\n      // Bind \"fill\" property to \"fill\" key in data\n      polygonTemplate.propertyFields.fill = 'fill';\n\n      // Create image series\n      const imageSeries = chart.series.push(new am4maps.MapImageSeries());\n\n      // Create a circle image in image series template so it gets replicated to all new images\n      const imageSeriesTemplate = imageSeries.mapImages.template;\n      const circle = imageSeriesTemplate.createChild(am4core.Circle);\n      circle.radius = 4;\n      circle.fill = am4core.color('#B27799');\n      circle.stroke = am4core.color('#FFFFFF');\n      circle.strokeWidth = 2;\n      circle.nonScaling = true;\n      circle.tooltipText = '{title}';\n\n      // Set property fields\n      imageSeriesTemplate.propertyFields.latitude = 'latitude';\n      imageSeriesTemplate.propertyFields.longitude = 'longitude';\n\n      // Add data for the three cities\n      imageSeries.data = [{\n        latitude: 48.856614,\n        longitude: 2.352222,\n        title: 'Paris'\n      }, {\n        latitude: 40.712775,\n        longitude: -74.005973,\n        title: 'New York'\n      }, {\n        latitude: 49.282729,\n        longitude: -123.120738,\n        title: 'Vancouver'\n      }];\n    });\n\n  }\n\n  ngOnDestroy() {\n    this.zone.runOutsideAngular(() => {\n      if (this.chart) {\n        this.chart.dispose();\n      }\n    });\n  }\n\n}\n\n","<div class=\"container tile--selected\">\n  <div class=\"container__item\">\n    <h2 class=\"widget__title widget__title--black\">Экспортные результаты</h2>\n\n    <div class=\"widget__chart\">\n      <!-- <app-map-chart></app-map-chart> -->\n      <div class=\"chart-container\" #chartContainer></div>\n    </div>\n  </div>\n\n  <div class=\"container__item\">\n    <ul>\n      <li>Страна - Сумма</li>\n      <li>Страна - Сумма</li>\n      <li>Страна - Сумма</li>\n      <li>Страна - Сумма</li>\n      <li>Страна - Сумма</li>\n    </ul>\n    <div class=\"line-bar\"></div>\n  </div>\n</div>\n","import { Component, OnInit, OnDestroy, AfterViewInit, ViewChild, ElementRef, NgZone } from '@angular/core';\nimport * as am4core from '@amcharts/amcharts4/core';\nimport * as am4maps from '@amcharts/amcharts4/maps';\nimport am4geodata_worldLow from '@amcharts/amcharts4-geodata/worldLow';\n\n@Component({\n  selector: 'app-analitics-right-tile',\n  templateUrl: './analitics-right-tile.component.html',\n  styleUrls: ['./analitics-right-tile.component.less']\n})\nexport class AnaliticsRightTileComponent implements OnInit, OnDestroy, AfterViewInit {\n\n  private chart: am4maps.MapChart;\n\n  @ViewChild('chartContainer')\n  private chartContainer: ElementRef;\n\n  constructor(\n    private zone: NgZone,\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  ngAfterViewInit() {\n    this.zone.runOutsideAngular(() => {\n\n      // Create map instance\n      this.chart = am4core.create(this.chartContainer.nativeElement, am4maps.MapChart);\n      const chart = this.chart;\n\n\n      // Set map definition\n      chart.geodata = am4geodata_worldLow;\n\n      // Set projection\n      chart.projection = new am4maps.projections.Miller();\n\n      // Create map polygon series\n      const polygonSeries = chart.series.push(new am4maps.MapPolygonSeries());\n\n      // Make map load polygon (like country names) data from GeoJSON\n      polygonSeries.useGeodata = true;\n\n      // Configure series\n      const polygonTemplate = polygonSeries.mapPolygons.template;\n      polygonTemplate.tooltipText = '{name}';\n      polygonTemplate.fill = am4core.color('gray');\n\n      // Create hover state and set alternative fill color\n      const hs = polygonTemplate.states.create('hover');\n      hs.properties.fill = am4core.color('#367B25');\n\n      // Remove Antarctica\n      polygonSeries.exclude = ['AQ'];\n\n      const color1 = am4core.color('#F05C5C');\n      const color2 = am4core.color('rgb(92, 240, 183)');\n\n      // Add some data\n      polygonSeries.data = [\n        {\n          id: 'US',\n          name: 'United States',\n          value: 100,\n          fill: color1\n        },\n        {\n          id: 'FR',\n          name: 'France',\n          value: 50,\n          fill: color1\n        },\n        {\n          id: 'CN',\n          name: 'China',\n          value: 500,\n          fill: color2\n        },\n        {\n          id: 'BH',\n          name: 'Bahrain',\n          value: 50,\n          fill: color2\n        },\n        {\n          id: 'BR',\n          name: 'Brazil',\n          value: 50,\n          fill: color2\n        },\n      ];\n\n      // Bind \"fill\" property to \"fill\" key in data\n      polygonTemplate.propertyFields.fill = 'fill';\n\n      // Create image series\n      const imageSeries = chart.series.push(new am4maps.MapImageSeries());\n\n      // Create a circle image in image series template so it gets replicated to all new images\n      const imageSeriesTemplate = imageSeries.mapImages.template;\n      const circle = imageSeriesTemplate.createChild(am4core.Circle);\n      circle.radius = 4;\n      circle.fill = am4core.color('#B27799');\n      circle.stroke = am4core.color('#FFFFFF');\n      circle.strokeWidth = 2;\n      circle.nonScaling = true;\n      circle.tooltipText = '{title}';\n\n      // Set property fields\n      imageSeriesTemplate.propertyFields.latitude = 'latitude';\n      imageSeriesTemplate.propertyFields.longitude = 'longitude';\n\n      // Add data for the three cities\n      imageSeries.data = [{\n        latitude: 48.856614,\n        longitude: 2.352222,\n        title: 'Paris'\n      }, {\n        latitude: 40.712775,\n        longitude: -74.005973,\n        title: 'New York'\n      }, {\n        latitude: 49.282729,\n        longitude: -123.120738,\n        title: 'Vancouver'\n      }];\n    });\n\n  }\n\n  ngOnDestroy() {\n    this.zone.runOutsideAngular(() => {\n      if (this.chart) {\n        this.chart.dispose();\n      }\n    });\n  }\n\n}\n\n","<div class=\"container tile--selected\">\n  <div class=\"container__item\">\n    <h2 class=\"widget__title widget__title--black\">Экспортные результаты</h2>\n\n    <div class=\"widget__chart\">\n      <!-- <app-map-chart></app-map-chart> -->\n      <div class=\"chart-container\" #chartContainer></div>\n    </div>\n  </div>\n\n  <div class=\"container__item\">\n    <ul>\n      <li>Страна - Сумма</li>\n      <li>Страна - Сумма</li>\n      <li>Страна - Сумма</li>\n      <li>Страна - Сумма</li>\n      <li>Страна - Сумма</li>\n    </ul>\n    <div class=\"line-bar\"></div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Client } from 'src/app/models/client';\nimport { Observable } from 'rxjs';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { ClientsDataService } from 'src/app/shared/dtata-services/clients-data.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { switchMap, startWith, map } from 'rxjs/operators';\nimport { AnaliticsDataService } from 'src/app/shared/dtata-services/analitics-data.service';\nimport { Industry } from '../../../models/industry';\nimport { ActivityTypeMapper, ActivityType } from '../../models/activity-type.enum';\n\n@Component({\n  selector: 'app-analitics-top-tile',\n  templateUrl: './analitics-top-tile.component.html',\n  styleUrls: ['./analitics-top-tile.component.less']\n})\nexport class AnaliticsTopTileComponent implements OnInit {\n\n  public data$: Observable<Array<Industry>>;\n\n  public selected: Industry;\n\n  public activityType: ActivityType;\n  public activityTypeLabel: string;\n  public industryLabel: string;\n\n  public searchForm: FormGroup = new FormGroup({\n    title: new FormControl(),\n    turnoverSum: new FormControl(),\n    exportSum: new FormControl(),\n  });\n\n  constructor(\n    private analiticsDataService: AnaliticsDataService,\n    private readonly router: Router,\n    private readonly activatedRoute: ActivatedRoute,\n  ) { }\n\n  ngOnInit() {\n\n    this.activityType = this.activatedRoute.snapshot.params['activityType'];\n    this.activityTypeLabel = ActivityTypeMapper.getLabel(this.activityType);\n\n    this.data$ = this.analiticsDataService.getAnalitics()\n      .pipe(\n        switchMap((clients) => {\n          return this.searchForm.valueChanges\n            .pipe(\n              startWith(null),\n              map((searchValue: {\n                title: string;\n                turnoverSum: number;\n                exportSum: number;\n              }) => {\n                if (searchValue) {\n                  return clients.filter(f => {\n                    return (f.title || '').toUpperCase().includes((searchValue.title || '').toUpperCase())\n                    //  && (f.turnoverSum && f.turnoverSum.toString() || '')\n                    //    .includes((searchValue.turnoverSum && searchValue.turnoverSum.toString() || ''))\n                    //  && (f.exportSum && f.exportSum.toString() || '')\n                    //    .includes((searchValue.exportSum && searchValue.exportSum.toString() || ''));\n                  });\n                } else {\n                  return clients;\n                }\n              })\n            );\n        })\n      );\n  }\n\n  // [routerLink]=\"[\n  //   '../',\n  //     {\n  //       outlets: {\n  //         right-tile-outlet: ['client-info-results', item.id],\n  //         'bottom-tile-outlet': ['../','client-info', item.id]\n  //       }\n  //     }\n  //   ]\"\n\n  public toggleSelected(item: Industry) {\n\n    let outlets: {\n      [key: string]: Array<any>\n    };\n\n    if (this.selected === item) {\n      this.selected = null;\n      outlets = {\n        'bottom-tile-outlet': ['analitics-bottom-tile', this.activityType],\n        'right-tile-outlet': ['analitics-right-tile', this.activityType],\n      };\n    } else {\n      this.selected = item;\n      outlets = {\n        'bottom-tile-outlet': ['analitics-bottom-tile-for-subindustry', this.activityType, item.id],\n        'right-tile-outlet': ['analitics-right-tile-for-subindustry', this.activityType, item.id],\n      };\n    }\n\n    this.router.navigate(\n      [\n        {\n          outlets: outlets,\n        }\n      ],\n      { relativeTo: this.activatedRoute.parent }\n    );\n  }\n\n\n}\n","<div class=\"container table-wrapper tile--selected\">\n  <table class=\"table tile--selected\" style=\"display: none;\">\n    <thead>\n      <tr class=\"table__row table__row-head\">\n        <th class=\"table__head\">Отрасль</th>\n        <th class=\"table__head\">Показатель экспорта</th>\n      </tr>\n      <tr class=\"table__row table__row-head\">\n        <th class=\"table__head\">\n          <input [formControl]=\"this.searchForm.get('title')\" />\n        </th>\n        <th class=\"table__head\">\n          <!-- <input [formControl]=\"this.searchForm.get('turnoverSum')\" /> -->\n        </th>\n        <!-- <th class=\"table__head\">\n           <input [formControl]=\"this.searchForm.get('exportSum')\" />\n        </th> -->\n      </tr>\n    </thead>\n    <tbody>\n      <ng-container *ngFor=\"let item of this.data$ | async\">\n        <tr\n          class=\"table__row table__row-data\"\n          [ngClass]=\"{\n            selected: selected === item\n          }\"\n        >\n          <td class=\"table__date\">\n            <a (click)=\"toggleSelected(item)\" href=\"javascript:void(0)\"\n              >{{ item.title }}\n            </a>\n          </td>\n          <td class=\"table__date\">{{ item.exportSum }}</td>\n        </tr>\n        <ng-container *ngIf=\"selected === item\">\n          <tr\n            class=\"table__row table__row-sub-data\"\n            *ngFor=\"let subItem of item.subIndustry\"\n          >\n            <td class=\"table__date table__date-detail\">\n              {{ subItem.title }}\n            </td>\n            <td class=\"table__date table__date-detail\">\n              <ul>\n                <li *ngFor=\"let exportDataList of subItem.exportDataList\">\n                  {{ exportDataList.date | date }} {{ exportDataList.value }}\n                </li>\n              </ul>\n            </td>\n          </tr>\n        </ng-container>\n      </ng-container>\n    </tbody>\n  </table>\n\n  <section class=\"table-fixed\">\n    <!--for demo wrap-->\n    <div class=\"table-fixed-header\">\n      <table cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <thead>\n          <tr class=\"\">\n            <th class=\"table__head\">Отрасль</th>\n            <th class=\"table__head\">Показатель экспорта</th>\n          </tr>\n          <tr class=\"\">\n            <th class=\"table__head\">\n              <input [formControl]=\"this.searchForm.get('title')\" />\n            </th>\n            <th class=\"table__head\">\n              <!-- <input [formControl]=\"this.searchForm.get('turnoverSum')\" /> -->\n            </th>\n            <!-- <th class=\"table__head\">\n               <input [formControl]=\"this.searchForm.get('exportSum')\" />\n            </th> -->\n          </tr>\n        </thead>\n      </table>\n    </div>\n    <div class=\"table-fixed-content\">\n      <table cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <tbody>\n          <ng-container *ngFor=\"let item of this.data$ | async\">\n            <tr\n              class=\"table__row table__row-data\"\n              [ngClass]=\"{\n                selected: selected === item\n              }\"\n            >\n              <td class=\"table__date\">\n                <a class=\"toggle-link\" (click)=\"toggleSelected(item)\" href=\"javascript:void(0)\"\n                  >{{ item.title }}\n                </a>\n              </td>\n              <td class=\"table__date\">{{ item.exportSum }}</td>\n            </tr>\n            <ng-container *ngIf=\"selected === item\">\n              <tr\n                class=\"table__row table__row-sub-data\"\n                *ngFor=\"let subItem of item.subIndustry\"\n              >\n                <td class=\"table__date table__date-detail\">\n                  {{ subItem.title }}\n                </td>\n                <td class=\"table__date table__date-detail\">\n                  <ul class=\"ul-progress\">\n                    <li *ngFor=\"let exportDataList of subItem.exportDataList\"\n                      class=\"ul-progress__item\"\n                    >\n                      {{ exportDataList.date | date : \"y\" }}: {{ exportDataList.value }}\n                    </li>\n                  </ul>\n                </td>\n              </tr>\n            </ng-container>\n          </ng-container>\n\n        </tbody>\n      </table>\n    </div>\n  </section>\n</div>\n","export enum ActivityType {\r\n  apk = 0,\r\n  prom = 1\r\n}\r\n\r\nexport class ActivityTypeMapper {\r\n  public static getLabel(type: ActivityType): 'АПК' | 'ПРОМ' {\r\n    switch (+type) {\r\n      case ActivityType.apk:\r\n        return 'АПК';\r\n        break;\r\n\r\n      case ActivityType.prom:\r\n        return 'ПРОМ';\r\n        break;\r\n    }\r\n\r\n    return undefined;\r\n  }\r\n}\r\n","import { AnaliticsRightTileForSubIndustryComponent } from './analitics/components/analitics-right-tile-for-subindusry/analitics-right-tile-for-subindusry.component';\nimport { PieChartComponent } from './first-page/pie-chart/pie-chart.component';\nimport { ChildComponent } from './shared/ChildComponent/ChildComponent.component';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { OutletComponent } from './shared/outlet/outlet.component';\nimport { SharedComponent } from './shared/shared.component';\nimport { RootPrimaryComponent } from './shared/RootPrimaryComponent/RootPrimaryComponent.component';\nimport { RootSecondaryComponent } from './shared/RootSecondaryComponent/RootSecondaryComponent.component';\nimport { ChildPrimaryComponent } from './shared/ChildPrimaryComponent/ChildPrimaryComponent.component';\nimport { ChildSecondaryComponent } from './shared/ChildSecondaryComponent/ChildSecondaryComponent.component';\nimport { FirstPageComponent } from './first-page/first-page.component';\nimport { ClientInfoResultsTileComponent } from './clients/components/client-info-results-tile/client-info-results-tile.component';\nimport { ClientInfoTileComponent } from './clients/components/client-info-tile/client-info-tile.component';\nimport { TopTileComponent } from './general-information/components/top-tile/top-tile.component';\nimport { BottomTileComponent } from './general-information/components/bottom-tile/bottom-tile.component';\nimport { ClientsComponent } from './clients/components/clients/clients.component';\nimport { RightTileComponent } from './general-information/components/right-tile/right-tile.component';\nimport { AnaliticsTopTileComponent } from './analitics/components/analitics-top-tile/analitics-top-tile.component';\nimport { AnaliticsBottomTileComponent } from './analitics/components/analitics-bottom-tile/analitics-bottom-tile.component';\nimport { AnaliticsRightTileComponent } from './analitics/components/analitics-right-tile/analitics-right-tile.component';\nimport { AnaliticsBottomTileForSubIndustryComponent } from './analitics/components/analitics-bottom-tile-for-subindusry/analitics-bottom-tile-for-subindusry.component';\n\n\nconst routes: Routes = [\n  {\n    path: 'p',\n    //loadChildren: () => import('./first-page/first-page.module').then(module => module.FirstPageModule)\n    component: SharedComponent,\n    children: [\n      {\n        path: 'pathName',\n        component: OutletComponent,\n        outlet: 'outletName'\n      },\n    ]\n  },\n  {\n    path: 'first-page',\n    loadChildren: () => import('./first-page/first-page.module').then(module => module.FirstPageModule)\n  },\n  {\n    path: 'pathName',\n    component: OutletComponent,\n    outlet: 'outletName'\n  },\n  // {\n  //   path: '',\n  //   component: SharedComponent,\n  //\n  // },\n  {\n    path: '',\n    redirectTo: 'first-page',\n    pathMatch: 'full'\n  },\n\n];\n\nconst appRoutes: Routes = [\n  { path: '', component: RootPrimaryComponent },\n  { path: 'rootSecondaryPath', component: RootSecondaryComponent, outlet: 'rootSecondary' },\n  {\n    path: 'child', component: ChildComponent,\n    children:\n      [\n        { path: '', component: ChildPrimaryComponent },\n        { path: 'childSecondaryPath', component: ChildSecondaryComponent, outlet: 'childSecondary' },\n      ]\n  },\n  // {\n  //   path: 'first-page',\n  //   loadChildren: () => import('./first-page/first-page.module').then(module => module.FirstPageModule)\n  // },\n  {\n    path: 'first-page', component: FirstPageComponent,\n    children:\n      [\n        { path: '', component: ChildPrimaryComponent },\n        { path: 'childSecondaryPath', component: PieChartComponent, outlet: 'right-tile-outlet' },\n        { path: 'client-info-results/:clientId', component: ClientInfoResultsTileComponent, outlet: 'right-tile-outlet' },\n        { path: 'client-info/:clientId', component: ClientInfoTileComponent, outlet: 'bottom-tile-outlet' },\n\n        { path: 'clients-top-tile', component: ClientsComponent, outlet: 'top-tile-outlet' },\n        { path: 'clients-right-tile', component: ClientInfoResultsTileComponent, outlet: 'right-tile-outlet' },\n\n        { path: 'analitics-top-tile/:activityType', component: AnaliticsTopTileComponent, outlet: 'top-tile-outlet' },\n        { path: 'analitics-bottom-tile/:activityType', component: AnaliticsBottomTileComponent, outlet: 'bottom-tile-outlet' },\n        {\n          path: 'analitics-bottom-tile-for-subindustry/:activityType/:industry',\n          component: AnaliticsBottomTileForSubIndustryComponent, outlet: 'bottom-tile-outlet'\n        },\n        { path: 'analitics-right-tile/:activityType', component: AnaliticsRightTileComponent, outlet: 'right-tile-outlet' },\n        {\n          path: 'analitics-right-tile-for-subindustry/:activityType/:industry',\n          component: AnaliticsRightTileForSubIndustryComponent, outlet: 'right-tile-outlet'\n        },\n\n\n        { path: 'general-top-tile', component: TopTileComponent, outlet: 'top-tile-outlet' },\n        { path: 'general-bottom-tile', component: BottomTileComponent, outlet: 'bottom-tile-outlet' },\n        { path: 'general-right-tile', component: RightTileComponent, outlet: 'right-tile-outlet' },\n\n      ]\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(appRoutes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.less']\n})\nexport class AppComponent {\n  title = 'moscow-administration';\n}\n","<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\n<!-- * * * * * * * * * * * The content below * * * * * * * * * * * -->\n<!-- * * * * * * * * * * is only a placeholder * * * * * * * * * * -->\n<!-- * * * * * * * * * * and can be replaced. * * * * * * * * * * * -->\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\n<!-- * * * * * * * * * Delete the template below * * * * * * * * * * -->\n<!-- * * * * * * * to get started with your project! * * * * * * * * -->\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\n\n<style>\n  :host {\n    font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";\n    font-size: 14px;\n    color: #333;\n    box-sizing: border-box;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6 {\n    margin: 8px 0;\n  }\n\n  p {\n    margin: 0;\n  }\n\n  .spacer {\n    flex: 1;\n  }\n\n  .toolbar {\n    height: 60px;\n    margin: -8px;\n    display: flex;\n    align-items: center;\n    background-color: #1976d2;\n    color: white;\n    font-weight: 600;\n  }\n\n  .toolbar img {\n    margin: 0 16px;\n  }\n\n  .toolbar #twitter-logo {\n    height: 40px;\n    margin: 0 16px;\n  }\n\n  .toolbar #twitter-logo:hover {\n    opacity: 0.8;\n  }\n\n  .content {\n    display: flex;\n    margin: 32px auto;\n    padding: 0 16px;\n    max-width: 960px;\n    flex-direction: column;\n    align-items: center;\n  }\n\n  svg.material-icons {\n    height: 24px;\n    width: auto;\n  }\n\n  svg.material-icons:not(:last-child) {\n    margin-right: 8px;\n  }\n\n  .card svg.material-icons path {\n    fill: #888;\n  }\n\n  .card-container {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n    margin-top: 16px;\n  }\n\n  .card {\n    border-radius: 4px;\n    border: 1px solid #eee;\n    background-color: #fafafa;\n    height: 40px;\n    width: 200px;\n    margin: 0 8px 16px;\n    padding: 16px;\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    transition: all 0.2s ease-in-out;\n    line-height: 24px;\n  }\n\n  .card-container .card:not(:last-child) {\n    margin-right: 0;\n  }\n\n  .card.card-small {\n    height: 16px;\n    width: 168px;\n  }\n\n  .card-container .card:not(.highlight-card) {\n    cursor: pointer;\n  }\n\n  .card-container .card:not(.highlight-card):hover {\n    transform: translateY(-3px);\n    box-shadow: 0 4px 17px rgba(black, 0.35);\n  }\n\n  .card-container .card:not(.highlight-card):hover .material-icons path {\n    fill: rgb(105, 103, 103);\n  }\n\n  .card.highlight-card {\n    background-color: #1976d2;\n    color: white;\n    font-weight: 600;\n    border: none;\n    width: auto;\n    min-width: 30%;\n    position: relative;\n  }\n\n  .card.card.highlight-card span {\n    margin-left: 60px;\n  }\n\n  svg#rocket {\n    width: 80px;\n    position: absolute;\n    left: -10px;\n    top: -24px;\n  }\n\n  svg#rocket-smoke {\n    height: calc(100vh - 95px);\n    position: absolute;\n    top: 10px;\n    right: 180px;\n    z-index: -10;\n  }\n\n  a,\n  a:visited,\n  a:hover {\n    color: #1976d2;\n    text-decoration: none;\n  }\n\n  a:hover {\n    color: #125699;\n  }\n\n  .terminal {\n    position: relative;\n    width: 80%;\n    max-width: 600px;\n    border-radius: 6px;\n    padding-top: 45px;\n    margin-top: 8px;\n    overflow: hidden;\n    background-color: rgb(15, 15, 16);\n  }\n\n  .terminal::before {\n    content: \"\\2022 \\2022 \\2022\";\n    position: absolute;\n    top: 0;\n    left: 0;\n    height: 4px;\n    background: rgb(58, 58, 58);\n    color: #c2c3c4;\n    width: 100%;\n    font-size: 2rem;\n    line-height: 0;\n    padding: 14px 0;\n    text-indent: 4px;\n  }\n\n  .terminal pre {\n    font-family: SFMono-Regular,Consolas,Liberation Mono,Menlo,monospace;\n    color: white;\n    padding: 0 1rem 1rem;\n    margin: 0;\n  }\n\n  .circle-link {\n    height: 40px;\n    width: 40px;\n    border-radius: 40px;\n    margin: 8px;\n    background-color: white;\n    border: 1px solid #eeeeee;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    cursor: pointer;\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\n    transition: 1s ease-out;\n  }\n\n  .circle-link:hover {\n    transform: translateY(-0.25rem);\n    box-shadow: 0px 3px 15px rgba(0, 0, 0, 0.2);\n  }\n\n  footer {\n    margin-top: 8px;\n    display: flex;\n    align-items: center;\n    line-height: 20px;\n  }\n\n  footer a {\n    display: flex;\n    align-items: center;\n  }\n\n  .github-star-badge {\n    color: #24292e;\n    display: flex;\n    align-items: center;\n    font-size: 12px;\n    padding: 3px 10px;\n    border: 1px solid rgba(27,31,35,.2);\n    border-radius: 3px;\n    background-image: linear-gradient(-180deg,#fafbfc,#eff3f6 90%);\n    margin-left: 4px;\n    font-weight: 600;\n    font-family: -apple-system,BlinkMacSystemFont,Segoe UI,Helvetica,Arial,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol;\n  }\n\n  .github-star-badge:hover {\n    background-image: linear-gradient(-180deg,#f0f3f6,#e6ebf1 90%);\n    border-color: rgba(27,31,35,.35);\n    background-position: -.5em;\n  }\n\n  .github-star-badge .material-icons {\n    height: 16px;\n    width: 16px;\n    margin-right: 4px;\n  }\n\n  svg#clouds {\n    position: fixed;\n    bottom: -160px;\n    left: -230px;\n    z-index: -10;\n    width: 1920px;\n  }\n\n\n  /* Responsive Styles */\n  @media screen and (max-width: 767px) {\n\n    .card-container > *:not(.circle-link) ,\n    .terminal {\n      width: 100%;\n    }\n\n    .card:not(.highlight-card) {\n      height: 16px;\n      margin: 8px 0;\n    }\n\n    .card.highlight-card span {\n      margin-left: 72px;\n    }\n\n    svg#rocket-smoke {\n      right: 120px;\n      transform: rotate(-5deg);\n    }\n  }\n\n  @media screen and (max-width: 575px) {\n    svg#rocket-smoke {\n      display: none;\n      visibility: hidden;\n    }\n  }\n</style>\n\n<!-- <a [routerLink]=\"[{ outlets: { outletName: ['pathName'] } }]\">test</a>\n<router-outlet></router-outlet> -->\n\n<router-outlet></router-outlet>\n<!-- <div style=\"border: solid 1px green\">\n  <router-outlet name=\"rootSecondary\"></router-outlet>\n</div> -->\n","import { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ChildSecondaryComponent } from './shared/ChildSecondaryComponent/ChildSecondaryComponent.component';\nimport { RootPrimaryComponent } from './shared/RootPrimaryComponent/RootPrimaryComponent.component';\nimport { RootSecondaryComponent } from './shared/RootSecondaryComponent/RootSecondaryComponent.component';\nimport { ChildComponent } from './shared/ChildComponent/ChildComponent.component';\nimport { ChildPrimaryComponent } from './shared/ChildPrimaryComponent/ChildPrimaryComponent.component';\nimport { SharedComponent } from './shared/shared.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n\n    RootPrimaryComponent,\n    RootSecondaryComponent,\n    ChildComponent,\n    ChildPrimaryComponent,\n    ChildSecondaryComponent,\n\n    SharedComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule\n  ],\n  providers: [\n\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, OnDestroy, AfterViewInit, NgZone, ViewChild, ElementRef } from '@angular/core';\nimport * as am4core from '@amcharts/amcharts4/core';\nimport * as am4maps from '@amcharts/amcharts4/maps';\nimport am4geodata_worldLow from '@amcharts/amcharts4-geodata/worldLow';\n\n@Component({\n  selector: 'app-client-info-results-tile',\n  templateUrl: './client-info-results-tile.component.html',\n  styleUrls: ['./client-info-results-tile.component.css']\n})\nexport class ClientInfoResultsTileComponent implements OnInit, OnDestroy, AfterViewInit {\n\n  private chart: am4maps.MapChart;\n\n  @ViewChild('chartContainer')\n  private chartContainer: ElementRef;\n\n  constructor(\n    private zone: NgZone,\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  ngAfterViewInit() {\n    this.zone.runOutsideAngular(() => {\n\n      // Create map instance\n      this.chart = am4core.create(this.chartContainer.nativeElement, am4maps.MapChart);\n      const chart = this.chart;\n\n\n      // Set map definition\n      chart.geodata = am4geodata_worldLow;\n\n      // Set projection\n      chart.projection = new am4maps.projections.Miller();\n\n      // Create map polygon series\n      const polygonSeries = chart.series.push(new am4maps.MapPolygonSeries());\n\n      // Make map load polygon (like country names) data from GeoJSON\n      polygonSeries.useGeodata = true;\n\n      // Configure series\n      const polygonTemplate = polygonSeries.mapPolygons.template;\n      polygonTemplate.tooltipText = '{name}';\n      polygonTemplate.fill = am4core.color('gray');\n\n      // Create hover state and set alternative fill color\n      const hs = polygonTemplate.states.create('hover');\n      hs.properties.fill = am4core.color('#367B25');\n\n      // Remove Antarctica\n      polygonSeries.exclude = ['AQ'];\n\n      const color1 =  am4core.color('#F05C5C');\n      const color2 =  am4core.color('rgb(92, 240, 183)');\n\n      // Add some data\n      polygonSeries.data = [\n        {\n          id: 'US',\n          name: 'United States',\n          value: 100,\n          fill: color1\n        },\n        {\n          id: 'FR',\n          name: 'France',\n          value: 50,\n          fill: color1\n        },\n        {\n          id: 'CN',\n          name: 'China',\n          value: 500,\n          fill: color2\n        },\n        {\n          id: 'BH',\n          name: 'Bahrain',\n          value: 50,\n          fill: color2\n        },\n        {\n          id: 'BR',\n          name: 'Brazil',\n          value: 50,\n          fill: color2\n        },\n      ];\n\n      // Bind \"fill\" property to \"fill\" key in data\n      polygonTemplate.propertyFields.fill = 'fill';\n\n      // Create image series\n      const imageSeries = chart.series.push(new am4maps.MapImageSeries());\n\n      // Create a circle image in image series template so it gets replicated to all new images\n      const imageSeriesTemplate = imageSeries.mapImages.template;\n      const circle = imageSeriesTemplate.createChild(am4core.Circle);\n      circle.radius = 4;\n      circle.fill = am4core.color('#B27799');\n      circle.stroke = am4core.color('#FFFFFF');\n      circle.strokeWidth = 2;\n      circle.nonScaling = true;\n      circle.tooltipText = '{title}';\n\n      // Set property fields\n      imageSeriesTemplate.propertyFields.latitude = 'latitude';\n      imageSeriesTemplate.propertyFields.longitude = 'longitude';\n\n      // Add data for the three cities\n      imageSeries.data = [{\n        latitude: 48.856614,\n        longitude: 2.352222,\n        title: 'Paris'\n      }, {\n        latitude: 40.712775,\n        longitude: -74.005973,\n        title: 'New York'\n      }, {\n        latitude: 49.282729,\n        longitude: -123.120738,\n        title: 'Vancouver'\n      }];\n    });\n\n  }\n\n  ngOnDestroy() {\n    this.zone.runOutsideAngular(() => {\n      if (this.chart) {\n        this.chart.dispose();\n      }\n    });\n  }\n\n}\n","<div class=\"container tile--selected\">\n\n  <div class=\"container__item\">\n    <h2 class=\"widget__title widget__title--black\">Экспортные результаты</h2>\n\n    <div class=\"widget__chart\">\n      <!-- <app-map-chart></app-map-chart> -->\n      <div class=\"chart-container\" #chartContainer ></div>\n    </div>\n  </div>\n\n  <div class=\"container__item\">\n    <h2 class=\"widget__title widget__title--black\">Контракты</h2>\n    <ul>\n      <li></li>\n      <li></li>\n      <li></li>\n      <li></li>\n      <li></li>\n    </ul>\n    <div class=\"line-bar\"></div>\n  </div>\n</div>\n","import * as am4charts from '@amcharts/amcharts4/charts';\nimport * as am4core from '@amcharts/amcharts4/core';\nimport am4themes_animated from '@amcharts/amcharts4/themes/animated';\nimport { AfterViewInit, Component, NgZone, OnDestroy, OnInit } from '@angular/core';\n\n\n@Component({\n  selector: 'app-client-info-tile',\n  templateUrl: './client-info-tile.component.html',\n  styleUrls: ['./client-info-tile.component.css']\n})\nexport class ClientInfoTileComponent implements OnInit, OnDestroy, AfterViewInit {\n\n  private chart: am4charts.RadarChart;\n\n  constructor(\n    private zone: NgZone\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  ngAfterViewInit() {\n    this.zone.runOutsideAngular(() => {\n\n\n      /* Set themes */\n      am4core.useTheme(am4themes_animated);\n\n      /* Create chart instance */\n      this.chart = am4core.create('clientInfoChartDiv', am4charts.RadarChart);\n\n      const chart = this.chart;\n\n      chart.data = [\n        {\n          category: 'Оборот\tкомпании',\n          value1: 153,\n        },\n        {\n          category: 'Экспортный\tоборот',\n          value2: 132\n        },\n\n      ];\n\n      chart.colors.step = 4;\n      // chart.dateFormatter.inputDateFormat = 'YYYY-MM-dd';\n\n      chart.radius = am4core.percent(90);\n      chart.innerRadius = am4core.percent(40);\n\n      const categoryAxis = chart.yAxes.push(new am4charts.CategoryAxis<am4charts.AxisRendererRadial>());\n      categoryAxis.dataFields.category = 'category';\n      categoryAxis.renderer.labels.template.location = 0.5;\n      categoryAxis.renderer.labels.template.horizontalCenter = 'right';\n      categoryAxis.renderer.grid.template.location = 0;\n      categoryAxis.renderer.tooltipLocation = 0.5;\n      categoryAxis.renderer.grid.template.strokeOpacity = 0.07;\n      categoryAxis.renderer.minGridDistance = 10;\n      // categoryAxis.mouseEnabled = false;\n      categoryAxis.tooltip.disabled = true;\n      categoryAxis.renderer.labels.template.fill = am4core.color('#ffffff');\n\n      const valueAxis = chart.xAxes.push(new am4charts.ValueAxis<am4charts.AxisRendererCircular>());\n      //  valueAxis.renderer.labels.template.horizontalCenter = 'center';\n      valueAxis.strictMinMax = true;\n      valueAxis.renderer.maxLabelPosition = 0.99;\n      valueAxis.renderer.grid.template.strokeOpacity = 0.07;\n      valueAxis.min = 0;\n      valueAxis.max = 200;\n      valueAxis.tooltip.disabled = true;\n      valueAxis.renderer.labels.template.disabled = true;\n\n\n      const series1 = chart.series.push(new am4charts.RadarColumnSeries());\n      series1.name = 'Series 1';\n      // series1.dataFields.openDateX = 'startDate2';\n      series1.dataFields.valueX = 'value1';\n      series1.dataFields.categoryY = 'category';\n      // series1.clustered = false;\n      series1.columns.template.radarColumn.cornerRadius = 30;\n      series1.columns.template.tooltipText = '{category}: {valueX}';\n      series1.zIndex = 3;\n\n      const series2 = chart.series.push(new am4charts.RadarColumnSeries());\n      series2.name = 'Series 2';\n      // series2.dataFields.openDateX = 'startDate2';\n      series2.dataFields.valueX = 'value2';\n      series2.dataFields.categoryY = 'category';\n      // series2.clustered = false;\n      series2.columns.template.radarColumn.cornerRadius = 30;\n      series2.columns.template.tooltipText = '{category}: {valueX}';\n      series2.zIndex = 2;\n\n\n      chart.seriesContainer.zIndex = -1;\n\n      // chart.scrollbarX = new am4core.Scrollbar();\n      // chart.scrollbarY = new am4core.Scrollbar();\n\n      chart.cursor = new am4charts.RadarCursor();\n      chart.cursor.innerRadius = am4core.percent(40);\n      chart.cursor.lineY.disabled = true;\n\n      const yearLabel = chart.radarContainer.createChild(am4core.Label);\n      yearLabel.text = '200';\n      yearLabel.fontSize = 30;\n      yearLabel.horizontalCenter = 'middle';\n      yearLabel.verticalCenter = 'middle';\n    });\n\n  }\n\n  ngOnDestroy() {\n    this.zone.runOutsideAngular(() => {\n      if (this.chart) {\n        this.chart.dispose();\n      }\n    });\n  }\n\n}\n","<div class=\"container tile--selected\">\n\n  <div class=\"container__item\">\n    <div id=\"clientInfoChartDiv\"></div>\n  </div>\n\n  <div class=\"container__item\">\n    <h2>Сделано:</h2>\n    <ul>\n      <li></li>\n      <li></li>\n    </ul>\n\n    <h2>В работе:</h2>\n    <ul>\n      <li></li>\n      <li></li>\n    </ul>\n  </div>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { switchMap, map, startWith } from 'rxjs/operators';\nimport { Client } from 'src/app/models/client';\nimport { ClientsDataService } from 'src/app/shared/dtata-services/clients-data.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormGroup, FormControl } from '@angular/forms';\n\n\n\n@Component({\n  selector: 'app-clients',\n  templateUrl: './clients.component.html',\n  styleUrls: ['./clients.component.less']\n})\nexport class ClientsComponent implements OnInit {\n\n  public clients$: Observable<Array<Client>>;\n\n  public selected: Client;\n\n  public searchForm: FormGroup = new FormGroup({\n    title: new FormControl(),\n    turnoverSum: new FormControl(),\n    exportSum: new FormControl(),\n  });\n\n  constructor(\n    private clientsDataService: ClientsDataService,\n    private readonly router: Router,\n    private readonly activatedRoute: ActivatedRoute,\n  ) { }\n\n  ngOnInit() {\n    this.clients$ = this.clientsDataService.getClients()\n      .pipe(\n        switchMap((clients) => {\n          return this.searchForm.valueChanges\n            .pipe(\n              startWith(null),\n              map((searchValue: {\n                title: string;\n                turnoverSum: number;\n                exportSum: number;\n              }) => {\n                if (searchValue) {\n                  return clients.filter(f => {\n                    return (f.title || '').toUpperCase().includes((searchValue.title || '').toUpperCase())\n                      && (f.turnoverSum && f.turnoverSum.toString() || '')\n                        .includes((searchValue.turnoverSum && searchValue.turnoverSum.toString() || ''))\n                      && (f.exportSum && f.exportSum.toString() || '')\n                        .includes((searchValue.exportSum && searchValue.exportSum.toString() || ''));\n                  });\n                } else {\n                  return clients;\n                }\n              })\n            );\n        })\n      );\n  }\n\n  // [routerLink]=\"[\n  //   '../',\n  //     {\n  //       outlets: {\n  //         right-tile-outlet: ['client-info-results', item.id],\n  //         'bottom-tile-outlet': ['../','client-info', item.id]\n  //       }\n  //     }\n  //   ]\"\n\n  public toggleSelected(item: Client) {\n\n    let outlets: {\n      [key: string]: Array<any>\n    };\n\n    if (this.selected === item) {\n      this.selected = null;\n      outlets = {\n        'bottom-tile-outlet': ['general-bottom-tile'],\n        'right-tile-outlet': ['general-right-tile'],\n      };\n    } else {\n      this.selected = item;\n      outlets = {\n        'right-tile-outlet': ['client-info-results', 0],\n        'bottom-tile-outlet': ['client-info', 0]\n      };\n    }\n\n    this.router.navigate(\n      [\n        {\n          outlets: outlets,\n        }\n      ],\n      { relativeTo: this.activatedRoute.parent }\n    );\n  }\n\n}\n","<div class=\"container table-wrapper tile--selected\">\n\n\n  <section class=\"table-fixed\">\n    <!--for demo wrap-->\n    <div class=\"table-fixed-header\">\n      <table cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <thead>\n          <tr class=\"\">\n            <th class=\"table__head\">Компания</th>\n            <th class=\"table__head\">Оборот (млн руб.)</th>\n            <th class=\"table__head\">Экспорт (млн руб.)</th>\n          </tr>\n          <tr class=\"\">\n            <th class=\"table__head\">\n              <input [formControl]=\"this.searchForm.get('title')\" />\n            </th>\n            <th class=\"table__head\">\n              <input [formControl]=\"this.searchForm.get('turnoverSum')\" />\n            </th>\n            <th class=\"table__head\">\n              <input [formControl]=\"this.searchForm.get('exportSum')\" />\n            </th>\n          </tr>\n        </thead>\n      </table>\n    </div>\n    <div class=\"table-fixed-content\">\n      <table cellpadding=\"0\" cellspacing=\"0\" border=\"0\">\n        <ng-container *ngFor=\"let item of this.clients$ | async\">\n          <tr\n            class=\"table__row table__row-data\"\n            [ngClass]=\"{\n              selected: selected === item\n            }\"\n          >\n            <td class=\"table__date\">\n              <a class=\"toggle-link\" (click)=\"toggleSelected(item)\" href=\"javascript:void(0)\"\n                >{{ item.title }}\n              </a>\n            </td>\n            <td class=\"table__date\">{{ item.turnoverSum }}</td>\n            <td class=\"table__date\">{{ item.exportSum }}</td>\n          </tr>\n          <tr class=\"table__row\" *ngIf=\"selected === item\">\n            <td class=\"table__date table__date__detail\" colspan=\"3\">\n              <p>{{ item.description }}</p>\n              <ul>\n                <li>{{ item.segment }}</li>\n                <li>{{ item.industry }}</li>\n                <li>{{ item.product }}</li>\n              </ul>\n            </td>\n          </tr>\n        </ng-container>\n      </table>\n    </div>\n  </section>\n</div>\n","import { Component, OnInit, OnDestroy, AfterViewInit, NgZone } from '@angular/core';\nimport * as am4core from '@amcharts/amcharts4/core';\nimport * as am4charts from '@amcharts/amcharts4/charts';\nimport am4themes_animated from '@amcharts/amcharts4/themes/animated';\n\n@Component({\n  selector: 'app-bar-chart',\n  templateUrl: './bar-chart.component.html',\n  styleUrls: ['./bar-chart.component.css']\n})\nexport class BarChartComponent implements OnInit, OnDestroy, AfterViewInit {\n\n  private chart: am4charts.XYChart;\n\n  constructor(\n    private zone: NgZone\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  ngAfterViewInit() {\n    this.zone.runOutsideAngular(() => {\n\n      const data = [];\n      let visits = 10;\n      for (let i = 1; i < 12; i++) {\n        visits += Math.round((Math.random()) * Math.random() * 10);\n        data.push({\n          date: new Date(2019, i, 0),\n          name: 'name' + i,\n          value: visits,\n        });\n      }\n\n      // Create chart instance\n      this.chart = am4core.create('barchartdiv', am4charts.XYChart);\n\n      // Add data\n      this.chart.data = data;\n\n      // Create axes\n      const categoryAxis = this.chart.xAxes.push(new am4charts.DateAxis());\n      categoryAxis.renderer.grid.template.strokeOpacity = 0;\n      categoryAxis.renderer.labels.template.disabled = true;\n      // categoryAxis\n      // categoryAxis.title.text = 'Countries';\n\n      const valueAxis = this.chart.yAxes.push(new am4charts.ValueAxis());\n      valueAxis.renderer.grid.template.strokeOpacity = 0;\n      valueAxis.renderer.labels.template.disabled = true;\n      // valueAxis.tooltip\n      // valueAxis.title.text = 'Litres sold (M)';\n\n      // Create series\n      const series = this.chart.series.push(new am4charts.ColumnSeries());\n      series.dataFields.dateX = 'date';\n      series.dataFields.valueY = 'value';\n      series.name = 'Sales';\n      series.columns.template.tooltipText = '{date}\\nПоказатель: {valueY}';\n      series.columns.template.fill = am4core.color('rgb(47,151,214)'); // fill\n\n      var columnTemplate = series.columns.template;\n      columnTemplate.width = 10;\n      // columnTemplate.column.cornerRadiusTopLeft = 20;\n      // columnTemplate.column.cornerRadiusTopRight = 20;\n      columnTemplate.strokeOpacity = 0;\n\n      // let series2 = this.chart.series.push(new am4charts.LineSeries());\n      // series2.name = 'Units';\n      // series2.stroke = am4core.color('#CDA2AB');\n      // series2.strokeWidth = 3;\n      // series2.dataFields.valueY = 'units';\n      // series2.dataFields.categoryX = 'country';\n    });\n\n  }\n\n  ngOnDestroy() {\n    this.zone.runOutsideAngular(() => {\n      if (this.chart) {\n        this.chart.dispose();\n      }\n    });\n  }\n\n}\n","<div id=\"barchartdiv\" style=\"width: 100%; height: 100%\"></div>\n","import { Component, OnInit, NgZone, OnDestroy, AfterViewInit } from '@angular/core';\nimport * as am4core from '@amcharts/amcharts4/core';\nimport * as am4charts from '@amcharts/amcharts4/charts';\nimport am4themes_animated from '@amcharts/amcharts4/themes/animated';\n\n@Component({\n  selector: 'app-chart',\n  templateUrl: './chart.component.html',\n  styleUrls: ['./chart.component.css']\n})\nexport class ChartComponent implements OnInit, OnDestroy, AfterViewInit {\n\n\n  private chart: am4charts.XYChart;\n\n  constructor(\n    private zone: NgZone\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  ngAfterViewInit() {\n    this.zone.runOutsideAngular(() => {\n      const chart = am4core.create('chartdiv', am4charts.XYChart);\n\n      chart.paddingRight = 20;\n\n      const data = [];\n      let visits = 10;\n      let visits2 = 15;\n      for (let i = 1; i < 10; i++) {\n        visits += Math.round((Math.random()) * Math.random() * 10);\n        visits2 += Math.round((Math.random()) * Math.random() * 10);\n        data.push({\n          date: new Date(2010 + i, 0, 0),\n          name: 'name' + i,\n          value: visits,\n          value2: visits2,\n        });\n      }\n\n      chart.data = data;\n\n      const dateAxis = chart.xAxes.push(new am4charts.DateAxis());\n      dateAxis.renderer.grid.template.location = 0;\n      dateAxis.renderer.labels.template.fill = am4core.color('#ffffff');\n\n      const valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\n      valueAxis.tooltip.disabled = true;\n      valueAxis.renderer.minWidth = 35;\n      valueAxis.renderer.labels.template.fill = am4core.color('#ffffff');\n      valueAxis.title.text = 'млрд $';\n      valueAxis.title.fill = am4core.color('#ffffff');\n\n      const series = chart.series.push(new am4charts.LineSeries());\n      // series.data = data;\n      series.dataFields.dateX = 'date';\n      series.dataFields.valueY = 'value';\n      series.bullets.push(new am4charts.CircleBullet());\n\n      const series2 = chart.series.push(new am4charts.LineSeries());\n      series2.dataFields.dateX = 'date';\n      series2.dataFields.valueY = 'value2';\n      series2.bullets.push(new am4charts.CircleBullet());\n\n      series.tooltipText = '{valueY.value}';\n      chart.cursor = new am4charts.XYCursor();\n\n      const scrollbarX = new am4charts.XYChartScrollbar();\n      scrollbarX.series.push(series);\n      // scrollbarX.series.push(series2);\n      // chart.scrollbarX = scrollbarX;\n\n      this.chart = chart;\n    });\n  }\n\n  ngOnDestroy() {\n    this.zone.runOutsideAngular(() => {\n      if (this.chart) {\n        this.chart.dispose();\n      }\n    });\n  }\n\n}\n","<div id=\"chartdiv\" style=\"width: 100%; height: 100%\"></div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ActivityType } from '../analitics/models/activity-type.enum';\n\n@Component({\n  selector: 'app-first-page',\n  templateUrl: './first-page.component.html',\n  styleUrls: ['./first-page.component.less']\n})\nexport class FirstPageComponent implements OnInit {\n\n  public currentDate = new Date();\n  public currentTab: string;\n\n  constructor(\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n  ) { }\n\n  ngOnInit() {\n    this.router.navigate(\n      [\n        {\n          outlets: {\n            'top-tile-outlet': ['general-top-tile'],\n            'bottom-tile-outlet': ['general-bottom-tile'],\n            'right-tile-outlet': ['general-right-tile'],\n          }\n        },\n      ],\n      { relativeTo: this.activatedRoute }\n    );\n  }\n\n  public toggle(tab: 'client' | 'apk' | 'prom') {\n\n    let rout: string;\n\n    const oulets: {\n      'top-tile-outlet': Array<any>,\n      'bottom-tile-outlet': Array<any>,\n      'right-tile-outlet': Array<any>,\n    } = {\n      'top-tile-outlet': ['general-top-tile'],\n      'bottom-tile-outlet': ['general-bottom-tile'],\n      'right-tile-outlet': ['general-right-tile'],\n    };\n\n\n\n    if (this.currentTab === tab) {\n      this.currentTab = null;\n      rout = 'general-top-tile';\n    } else {\n      this.currentTab = tab;\n      switch (tab) {\n\n        case 'client':\n          oulets['top-tile-outlet'] = ['clients-top-tile'];\n          break;\n\n        case 'apk':\n          oulets['top-tile-outlet'] = ['analitics-top-tile', ActivityType.apk];\n          oulets['bottom-tile-outlet'] = ['analitics-bottom-tile', ActivityType.apk];\n          oulets['right-tile-outlet'] = ['analitics-right-tile', ActivityType.apk];\n          break;\n\n        case 'prom':\n          oulets['top-tile-outlet'] = ['analitics-top-tile', ActivityType.prom];\n          oulets['bottom-tile-outlet'] = ['analitics-bottom-tile', ActivityType.prom];\n          oulets['right-tile-outlet'] = ['analitics-right-tile', ActivityType.prom];\n          break;\n\n        default:\n          break;\n      }\n    }\n\n    this.router.navigate(\n      [\n        {\n          outlets: oulets\n        },\n      ],\n      { relativeTo: this.activatedRoute }\n    );\n\n\n  }\n\n}\n","<!-- <router-outlet></router-outlet>\n<div style=\"border:solid 1px red\">\n  <router-outlet name=\"right-tile-outlet\"></router-outlet>\n</div> -->\n\n<div class=\"page\">\n  <div class=\"workspace\">\n    <div class=\"workspace__column1\">\n      <section class=\"logo\">\n        <a><img src=\"assets/images/logo.png\"/></a>\n      </section>\n\n      <section\n        class=\"widget widget-clients tile-tab\"\n        [ngClass]=\"{\n          'tile--selected': this.currentTab === 'client'\n        }\"\n        (click)=\"toggle('client')\"\n      >\n        <h2 class=\"widget__title widget__title-clients\">36</h2>\n        <h2 class=\"widget__title\">Клиенты</h2>\n        <div class=\"line-bar\">\n          <div class=\"line-bar__value line-bar__value1\"></div>\n          <div class=\"line-bar__value line-bar__value2\"></div>\n          <div class=\"line-bar__value line-bar__value3\"></div>\n        </div>\n      </section>\n\n      <section\n        class=\"widget widget-analytics\"\n        [ngClass]=\"{\n          'tile--selected': this.currentTab === 'apk' || this.currentTab === 'prom'\n        }\"\n      >\n        <h2 class=\"widget__title\">Аналитика</h2>\n        <div class=\"widget__chart\">\n          <app-bar-chart></app-bar-chart>\n        </div>\n        <div class=\"widget-analytics__buttons\">\n          <a href=\"javascript:void(0)\" (click)=\"toggle('apk')\">Апк</a>\n          <a href=\"javascript:void(0)\" (click)=\"toggle('prom')\">Пром</a>\n        </div>\n      </section>\n\n      <section class=\"widget widget-kpi\">\n        <h2 class=\"widget__title\">KPI</h2>\n        <div class=\"widget__chart\">\n          <app-pie-chart></app-pie-chart>\n        </div>\n      </section>\n    </div>\n    <div class=\"workspace__column2\">\n      <!-- <section class=\"widget widget-export\" *ngIf=\"!currentTab\">\n        <div class=\"widget-export__title\">\n          <div class=\"export-title__title\">\n            <h2\n              class=\"export-title__title-info widget__block--light block-title\"\n            >\n              Объемы экспорта\n            </h2>\n            <p class=\"export-title__title-date\">{{ currentDate | date }}</p>\n          </div>\n          <div class=\"export-title__legend\">\n            <ul class=\"legend-list widget__block--light\">\n              <li class=\"legend-list__item\">\n                <span class=\"legend-list__export-type\">Пром</span> <br />\n                экспорт\n              </li>\n              <li class=\"legend-list__item\">\n                <span class=\"legend-list__export-type\">Апк</span> <br />\n                экспорт\n              </li>\n            </ul>\n          </div>\n        </div>\n        <div class=\"widget-export__chart\">\n          <app-chart></app-chart>\n        </div>\n      </section>\n\n      <section class=\"widget widget-export\" *ngIf=\"currentTab === 'client'\">\n        <app-clients></app-clients>\n      </section> -->\n\n      <section class=\"widget\">\n        <router-outlet name=\"top-tile-outlet\"></router-outlet>\n      </section>\n\n      <section class=\"widget\">\n        <router-outlet name=\"bottom-tile-outlet\"></router-outlet>\n      </section>\n    </div>\n    <div class=\"workspace__column3\">\n      <section class=\"widget\">\n        <router-outlet name=\"right-tile-outlet\"></router-outlet>\n      </section>\n\n      <!-- <section class=\"widget widget-contracts\">\n        <h2 class=\"widget__title widget__title--black\">Экспортные контракты</h2>\n        <div class=\"widget-contracts__info contracts-info\">\n          <div class=\"contracts-info__item\">\n            <h2 class=\"contracts-info__value\">6</h2>\n            <p class=\"contracts-info__description\">Контракты</p>\n          </div>\n          <div class=\"contracts-info__item\">\n            <h2 class=\"contracts-info__value\">46 млн $</h2>\n            <p class=\"contracts-info__description\">Общая сумма</p>\n          </div>\n        </div>\n      </section>\n\n      <section class=\"widget widget-map\">\n        <div class=\"widget__chart\">\n          <app-map-chart></app-map-chart>\n        </div>\n      </section>\n\n      <section class=\"widget widget-contracts-2\">\n        <h2 class=\"widget__title widget__title--black\">Контракты</h2>\n        <div class=\"line-bar\"></div>\n      </section> -->\n    </div>\n  </div>\n</div>\n","import am4geodata_worldLow from '@amcharts/amcharts4-geodata/worldLow';\nimport * as am4charts from '@amcharts/amcharts4/charts';\nimport * as am4core from '@amcharts/amcharts4/core';\nimport * as am4maps from '@amcharts/amcharts4/maps';\nimport { AfterViewInit, Component, NgZone, OnDestroy, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-map-chart',\n  templateUrl: './map-chart.component.html',\n  styleUrls: ['./map-chart.component.css']\n})\nexport class MapChartComponent implements OnInit, OnDestroy, AfterViewInit {\n\n  private chart: am4maps.MapChart;\n\n  constructor(\n    private zone: NgZone\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  ngAfterViewInit() {\n    this.zone.runOutsideAngular(() => {\n\n      // Create map instance\n      this.chart = am4core.create('mapchartdiv', am4maps.MapChart);\n      const chart = this.chart;\n\n\n      // Set map definition\n      chart.geodata = am4geodata_worldLow;\n\n      // Set projection\n      chart.projection = new am4maps.projections.Miller();\n\n      // Create map polygon series\n      const polygonSeries = chart.series.push(new am4maps.MapPolygonSeries());\n\n      // Make map load polygon (like country names) data from GeoJSON\n      polygonSeries.useGeodata = true;\n\n      // Configure series\n      const polygonTemplate = polygonSeries.mapPolygons.template;\n      polygonTemplate.tooltipText = '{name}';\n      polygonTemplate.fill = am4core.color('#74B266');\n\n      // Create hover state and set alternative fill color\n      const hs = polygonTemplate.states.create('hover');\n      hs.properties.fill = am4core.color('#367B25');\n\n      // Remove Antarctica\n      polygonSeries.exclude = ['AQ'];\n\n      // Add some data\n      polygonSeries.data = [{\n        id: 'US',\n        name: 'United States',\n        value: 100,\n        // fill: am4core.color('#F05C5C')\n      }, {\n        id: 'FR',\n        name: 'France',\n        value: 50,\n        // fill: am4core.color('#5C5CFF')\n      }];\n\n      // Bind \"fill\" property to \"fill\" key in data\n      polygonTemplate.propertyFields.fill = 'fill';\n\n      // Create image series\n      const imageSeries = chart.series.push(new am4maps.MapImageSeries());\n\n      // Create a circle image in image series template so it gets replicated to all new images\n      const imageSeriesTemplate = imageSeries.mapImages.template;\n      const circle = imageSeriesTemplate.createChild(am4core.Circle);\n      circle.radius = 4;\n      circle.fill = am4core.color('#B27799');\n      circle.stroke = am4core.color('#FFFFFF');\n      circle.strokeWidth = 2;\n      circle.nonScaling = true;\n      circle.tooltipText = '{title}';\n\n      // Set property fields\n      imageSeriesTemplate.propertyFields.latitude = 'latitude';\n      imageSeriesTemplate.propertyFields.longitude = 'longitude';\n\n      // Add data for the three cities\n      imageSeries.data = [{\n        latitude: 48.856614,\n        longitude: 2.352222,\n        title: 'Paris'\n      }, {\n        latitude: 40.712775,\n        longitude: -74.005973,\n        title: 'New York'\n      }, {\n        latitude: 49.282729,\n        longitude: -123.120738,\n        title: 'Vancouver'\n      }];\n    });\n\n  }\n\n  ngOnDestroy() {\n    this.zone.runOutsideAngular(() => {\n      if (this.chart) {\n        this.chart.dispose();\n      }\n    });\n  }\n\n}\n","<div id=\"mapchartdiv\"></div>\n","import * as am4charts from '@amcharts/amcharts4/charts';\nimport * as am4core from '@amcharts/amcharts4/core';\nimport { AfterViewInit, Component, NgZone, OnDestroy, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-pie-chart',\n  templateUrl: './pie-chart.component.html',\n  styleUrls: ['./pie-chart.component.css']\n})\nexport class PieChartComponent implements OnInit, OnDestroy, AfterViewInit {\n\n  private chart: am4charts.PieChart;\n\n  constructor(\n    private zone: NgZone\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  ngAfterViewInit() {\n    this.zone.runOutsideAngular(() => {\n\n      // Create chart instance\n      this.chart = am4core.create('piechartdiv', am4charts.PieChart);\n\n      // Add data\n      this.chart.data = [\n        {\n          kpi: 'kpi 1',\n          value: 501.9\n        },\n        {\n          kpi: 'kpi 2',\n          value: 301.9\n        },\n        {\n          kpi: 'kpi 3',\n          value: 201.1\n        },\n      ];\n\n      // Add and configure Series\n      const pieSeries = this.chart.series.push(new am4charts.PieSeries());\n      pieSeries.dataFields.value = 'value';\n      pieSeries.dataFields.category = 'kpi';\n      pieSeries.slices.template.tooltipText = '{category}: {value}';\n\n      // Let's cut a hole in our Pie chart the size of 40% the radius\n      this.chart.innerRadius = am4core.percent(40);\n\n      // Disable ticks and labels\n      pieSeries.labels.template.disabled = true;\n      pieSeries.ticks.template.disabled = true;\n\n      // Disable tooltips\n      // pieSeries.slices.template.tooltipText = '';\n\n      // Add a legend\n      // this.chart.legend = new am4charts.Legend();\n    });\n\n  }\n\n  ngOnDestroy() {\n    this.zone.runOutsideAngular(() => {\n      if (this.chart) {\n        this.chart.dispose();\n      }\n    });\n  }\n\n}\n","<div id=\"piechartdiv\"></div>\n","import * as am4charts from '@amcharts/amcharts4/charts';\nimport * as am4core from '@amcharts/amcharts4/core';\nimport { AfterViewInit, Component, NgZone, OnDestroy, OnInit } from '@angular/core';\nimport am4themes_animated from '@amcharts/amcharts4/themes/animated';\n\n@Component({\n  selector: 'app-radar-chart',\n  templateUrl: './radar-chart.component.html',\n  styleUrls: ['./radar-chart.component.css']\n})\nexport class RadarChartComponent implements OnInit, OnDestroy, AfterViewInit {\n\n  private chart: am4charts.RadarChart;\n\n  constructor(\n    private zone: NgZone\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  ngAfterViewInit() {\n    this.zone.runOutsideAngular(() => {\n\n\n      /* Set themes */\n      am4core.useTheme(am4themes_animated);\n\n      /* Create chart instance */\n      this.chart = am4core.create('radarchartdiv', am4charts.RadarChart);\n\n      const chart = this.chart;\n\n      chart.data = [\n        {\n          category: 'Цель к 2024 г.',\n          value1: 133,\n        },\n        {\n          category: 'Контракты',\n          value2: 152\n        },\n        {\n          category: 'Соглашения',\n          value3: 132\n        },\n\n      ];\n\n      chart.colors.step = 4;\n      // chart.dateFormatter.inputDateFormat = 'YYYY-MM-dd';\n\n      chart.radius = am4core.percent(90);\n      chart.innerRadius = am4core.percent(40);\n\n      const categoryAxis = chart.yAxes.push(new am4charts.CategoryAxis<am4charts.AxisRendererRadial>());\n      categoryAxis.dataFields.category = 'category';\n      categoryAxis.renderer.labels.template.location = 0.5;\n      categoryAxis.renderer.labels.template.horizontalCenter = 'right';\n      categoryAxis.renderer.grid.template.location = 0;\n      categoryAxis.renderer.tooltipLocation = 0.5;\n      categoryAxis.renderer.grid.template.strokeOpacity = 0.07;\n      categoryAxis.renderer.minGridDistance = 10;\n      // categoryAxis.mouseEnabled = false;\n      categoryAxis.tooltip.disabled = true;\n      categoryAxis.renderer.labels.template.fill = am4core.color('#ffffff');\n\n      const valueAxis = chart.xAxes.push(new am4charts.ValueAxis<am4charts.AxisRendererCircular>());\n     //  valueAxis.renderer.labels.template.horizontalCenter = 'center';\n      valueAxis.strictMinMax = true;\n      valueAxis.renderer.maxLabelPosition = 0.99;\n      valueAxis.renderer.grid.template.strokeOpacity = 0.07;\n      valueAxis.min = 0;\n      valueAxis.max = 200;\n      valueAxis.tooltip.disabled = true;\n      valueAxis.renderer.labels.template.disabled = true;\n\n\n      const series1 = chart.series.push(new am4charts.RadarColumnSeries());\n      series1.name = 'Series 1';\n      // series1.dataFields.openDateX = 'startDate2';\n      series1.dataFields.valueX = 'value1';\n      series1.dataFields.categoryY = 'category';\n      // series1.clustered = false;\n      series1.columns.template.radarColumn.cornerRadius = 30;\n      series1.columns.template.tooltipText = '{category}: {valueX}';\n      series1.zIndex = 3;\n\n      const series2 = chart.series.push(new am4charts.RadarColumnSeries());\n      series2.name = 'Series 2';\n     // series2.dataFields.openDateX = 'startDate2';\n      series2.dataFields.valueX = 'value2';\n      series2.dataFields.categoryY = 'category';\n      // series2.clustered = false;\n      series2.columns.template.radarColumn.cornerRadius = 30;\n      series2.columns.template.tooltipText = '{category}: {valueX}';\n      series2.zIndex = 2;\n\n      const series3 = chart.series.push(new am4charts.RadarColumnSeries());\n      series3.name = 'Series 3';\n      // series3.dataFields.valueX = 'startDate3';\n      series3.dataFields.valueX = 'value3';\n      series3.dataFields.categoryY = 'category';\n      // series3.clustered = false;\n      series3.columns.template.radarColumn.cornerRadius = 30;\n      series3.columns.template.tooltipText = '{category}: {valueX}';\n\n\n      chart.seriesContainer.zIndex = -1;\n\n      // chart.scrollbarX = new am4core.Scrollbar();\n      // chart.scrollbarY = new am4core.Scrollbar();\n\n      chart.cursor = new am4charts.RadarCursor();\n      chart.cursor.innerRadius = am4core.percent(40);\n      chart.cursor.lineY.disabled = true;\n\n      const yearLabel = chart.radarContainer.createChild(am4core.Label);\n      yearLabel.text = '200';\n      yearLabel.fontSize = 30;\n      yearLabel.horizontalCenter = 'middle';\n      yearLabel.verticalCenter = 'middle';\n    });\n\n  }\n\n  ngOnDestroy() {\n    this.zone.runOutsideAngular(() => {\n      if (this.chart) {\n        this.chart.dispose();\n      }\n    });\n  }\n\n}\n","<div id=\"radarchartdiv\"></div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-bottom-tile',\n  templateUrl: './bottom-tile.component.html',\n  styleUrls: ['./bottom-tile.component.css']\n})\nexport class BottomTileComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<section class=\"widget widget-common-kpi\">\n  <div class=\"widget-common-kpi__chart\">\n    <app-radar-chart></app-radar-chart>\n  </div>\n  <div class=\"widget-common-kpi__info\">\n    <h2 class=\"info__title widget__block widget__block--light block-title\">\n      KPI Моспром\n    </h2>\n    <div class=\"info__values widget__block\">\n      <app-kpi-value\n        [value]=\"45\"\n        [status]=\"'сделано'\"\n        [percent]=\"28.4\"\n      ></app-kpi-value>\n      <app-kpi-value\n        [value]=\"145\"\n        [status]=\"'в работе'\"\n        [percent]=\"71.6\"\n      ></app-kpi-value>\n    </div>\n    <h2 class=\"info__title2 widget__block widget__block--light block-title\">\n      Экспортные результаты\n    </h2>\n  </div>\n</section>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-right-tile',\n  templateUrl: './right-tile.component.html',\n  styleUrls: ['./right-tile.component.css']\n})\nexport class RightTileComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"container\">\n  <section class=\"widget widget-contracts\">\n    <h2 class=\"widget__title widget__title--black\">Экспортные контракты</h2>\n    <div class=\"widget-contracts__info contracts-info\">\n      <div class=\"contracts-info__item\">\n        <h2 class=\"contracts-info__value\">6</h2>\n        <p class=\"contracts-info__description\">Контракты</p>\n      </div>\n      <div class=\"contracts-info__item\">\n        <h2 class=\"contracts-info__value\">46 млн $</h2>\n        <p class=\"contracts-info__description\">Общая сумма</p>\n      </div>\n    </div>\n  </section>\n\n  <section class=\"widget widget-map\">\n    <div class=\"widget__chart\">\n      <app-map-chart></app-map-chart>\n    </div>\n  </section>\n\n  <section class=\"widget widget-contracts-2\">\n    <h2 class=\"widget__title widget__title--black\">Контракты и соглашения</h2>\n    <div class=\"line-bar\"></div>\n  </section>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-top-tile',\n  templateUrl: './top-tile.component.html',\n  styleUrls: ['./top-tile.component.css']\n})\nexport class TopTileComponent implements OnInit {\n\n  public currentDate = new Date();\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<section class=\"widget widget-export\">\n  <div class=\"widget-export__title\">\n    <div class=\"export-title__title\">\n      <h2\n        class=\"export-title__title-info widget__block--light block-title\"\n      >\n        Объемы экспорта\n      </h2>\n      <p class=\"export-title__title-date\">{{ currentDate | date }}</p>\n    </div>\n    <div class=\"export-title__legend\">\n      <ul class=\"legend-list widget__block--light\">\n        <li class=\"legend-list__item\">\n          <span class=\"legend-list__export-type\">Пром</span> <br />\n          экспорт\n        </li>\n        <li class=\"legend-list__item\">\n          <span class=\"legend-list__export-type\">Апк</span> <br />\n          экспорт\n        </li>\n      </ul>\n    </div>\n  </div>\n  <div class=\"widget-export__chart\">\n    <app-chart></app-chart>\n  </div>\n</section>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-ChildComponent',\n  templateUrl: './ChildComponent.component.html',\n  styleUrls: ['./ChildComponent.component.css']\n})\nexport class ChildComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<p>\n  ChildComponent works!\n</p>\n<router-outlet></router-outlet>\n<div style=\"border:solid 1px red\">\n  <router-outlet name=\"right-tile-outlet\"></router-outlet>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-ChildPrimaryComponent',\n  templateUrl: './ChildPrimaryComponent.component.html',\n  styleUrls: ['./ChildPrimaryComponent.component.css']\n})\nexport class ChildPrimaryComponent implements OnInit {\n  ngOnInit(): void {\n  }\n\n  constructor(\n    private readonly router: Router,\n    private readonly route: ActivatedRoute\n  ) {\n\n  }\n\n  setChildSecondary() {\n    this.router.navigate(\n      // [ 'fp2' ],\n      [ { outlets: { 'right-tile-outlet': ['client-info-results'] } }],\n      // { skipLocationChange: true }\n      { relativeTo: this.route }\n    );\n  }\n\n}\n","<p>\n  ChildPrimaryComponent works!\n</p>\n\n<div>\n  <button (click)=\"setChildSecondary()\">Set child secondary</button>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-ChildSecondaryComponent',\n  templateUrl: './ChildSecondaryComponent.component.html',\n  styleUrls: ['./ChildSecondaryComponent.component.css']\n})\nexport class ChildSecondaryComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<p>\n  ChildSecondaryComponent works!\n</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-RootPrimaryComponent',\n  templateUrl: './RootPrimaryComponent.component.html',\n  styleUrls: ['./RootPrimaryComponent.component.css']\n})\nexport class RootPrimaryComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<p>\n  RootPrimaryComponent works!\n</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-RootSecondaryComponent',\n  templateUrl: './RootSecondaryComponent.component.html',\n  styleUrls: ['./RootSecondaryComponent.component.css']\n})\nexport class RootSecondaryComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<p>\n  RootSecondaryComponent works!\n</p>\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-kpi-value',\n  templateUrl: './kpi-value.component.html',\n  styleUrls: ['./kpi-value.component.less']\n})\nexport class KpiValueComponent implements OnInit {\n\n  @Input()\n  public value: number;\n  @Input()\n  public status: string;\n  @Input()\n  public percent: number;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<section class=\"kpi-block\">\n  <div class=\"kpi-block__value-block\">\n    <div class=\"value-block__value widget__block--light\">\n      <p class=\"value\">{{ value }}</p>\n      <p class=\"unit\">млн $</p>\n    </div>\n    <div class=\"value-block__status widget__block--light\">\n      {{ status }}\n    </div>\n  </div>\n  <div class=\"kpi-block__percent-block\">\n    <div class=\"percent-block widget__block--light\">{{ percent }} %</div>\n  </div>\n</section>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { Client } from 'src/app/models/client';\nimport { Industry } from '../../models/industry';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AnaliticsDataService {\n\n  constructor(\n    private http: HttpClient,\n  ) { }\n\n\n  public getAnalitics(): Observable<Array<Industry>> {\n\n    const result: Array<Industry> = [];\n    for (let index = 0; index < 20; index++) {\n      result.push(\n        {\n          id: index,\n          title: `Отрасль ${index}`,\n          exportSum: 100 * index,\n\n          subIndustry: []\n\n        });\n\n      for (let j = 0; j < 10; j++) {\n        result[index].subIndustry.push(\n          {\n            title: `Подотрасль Отрасл ${j}`,\n            exportDataList: [\n              { date: new Date(), value: Math.round((Math.random()) * Math.random() * 10) },\n              { date: new Date(), value: Math.round((Math.random()) * Math.random() * 10) },\n              { date: new Date(), value: Math.round((Math.random()) * Math.random() * 10) },\n            ]\n          }\n\n        );\n      }\n    }\n\n    return of(result);\n    // return this.http\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Client } from '../../models/client';\nimport { Observable, of } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClientsDataService {\n\n  constructor(\n    private http: HttpClient,\n  ) { }\n\n\n  public getClients(): Observable<Array<Client>> {\n\n    const clients: Array<Client> = [];\n    for (let index = 0; index < 20; index++) {\n      clients.push(\n        {\n          id: index,\n          title: `Компания ${index}`,\n          turnoverSum: 150 * index,\n          exportSum: 100 * index,\n\n          description: `description ${index}`,\n\n          segment: `segment ${index}`,\n          industry: `industry ${index}`,\n          product: `product ${index}`,\n\n          contactPerson: {\n            fio: `fio ${index}`,\n            position: `position ${index}`\n          }\n        }\n      );\n    }\n\n    return of(clients);\n    // return this.http\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-outlet',\n  templateUrl: './outlet.component.html',\n  styleUrls: ['./outlet.component.css']\n})\nexport class OutletComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<p>\n  outlet works!\n</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-shared',\n  templateUrl: './shared.component.html',\n  styleUrls: ['./shared.component.css']\n})\nexport class SharedComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<p>\n  shared works!\n</p>\n<router-outlet></router-outlet>\n<div style=\"border:solid 1px red\">\n  <router-outlet name=\"right-tile-outlet\"></router-outlet>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}